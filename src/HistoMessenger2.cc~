//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: HistoMessenger.cc,v 1.5 2006-06-29 17:24:18 gunter Exp $
// GEANT4 tag $Name: geant4-09-04-patch-02 $
//
/////////////////////////////////////////////////////////////////////////
//
// HistoMessenger
//
// Created: 31.01.2003 V.Ivanchenko
//
// Modified:
// 04.06.2006 Adoptation of hadr01 (V.Ivanchenko)
//
////////////////////////////////////////////////////////////////////////
// 

#include "HistoMessenger2.hh"
#include "HistoManager.hh"

#include "G4UIdirectory.hh"
#include "G4UIcommand.hh"
#include "G4UIparameter.hh"
#include "G4UIcmdWithAString.hh"
#include <sstream>

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

HistoMessenger2::HistoMessenger2(HistoManager * Hman)
  :Hmanager(Hman)
{
  testDir = new G4UIdirectory("/outputrec/");
  testDir->SetGuidance(" Hadronic Extended Example.");

  particleCmd = new G4UIcmdWithAString("/outputrec/Particle",this);
  particleCmd->SetGuidance("set id of the particles to record in Full tree, separated by a space example 11 22 2112");
 
  infileCmd = new G4UIcmdWithAString("/testhadr/Infile",this);
  infileCmd->SetGuidance("Set input file source");
  infileCmd->SetDefaultValue("none");

  inchainCmd = new G4UIcmdWithAString("/testhadr/InChain",this);
  inchainCmd->SetGuidance("Set input file source TChain");
  inchainCmd->SetDefaultValue("Source");
  // G4UIparameter* nh = new G4UIparameter("nh",'i',false);
  // nh->SetGuidance("number of particles to record in Full tree: from 1 to 100");
  // nh->SetParameterRange("nh>0");
  // particleCmd->SetParameter(nh);

  // char tmp[100];
  // G4UIparameter* pdg_id_rec[100];
  // for (int j=0; j<100; j++) {
  //   sprintf(tmp,"pdg_id_rec_%i",j);
  //   pdg_id_rec[j] = new G4UIparameter(tmp,'i',false);
  //   pdg_id_rec[j]->SetGuidance("PDG id of the particle to record");
  //   particleCmd->SetParameter(pdg_id_rec[j]);
  // }

  fileCmd = new G4UIcmdWithAString("/outputrec/FileName",this);
  fileCmd->SetGuidance("set filename to structure output (if not, default, output, will be used");


  //

}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

HistoMessenger2::~HistoMessenger2()
{
  delete fileCmd;
  delete particleCmd;
  delete infileCmd;
  delete inchainCmd;

}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

void HistoMessenger2::SetNewValue(G4UIcommand* command,G4String newValues)
{
 
  if (command == fileCmd)
    Hmanager->SetFileName(newValues.data());

   if (command == particleCmd) { 
     Hmanager->SetPartRec(newValues);
  }

   if (command == infileCmd)
     Hmanager->SetInFileName(newValues);
   
   if (command == inchainCmd)
     Hmanager->SetInChainName(newValues);


       
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
